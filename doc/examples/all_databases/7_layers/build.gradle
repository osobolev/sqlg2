description = 'SQLG layers example'

apply plugin: 'java'

apply from: '../../db.gradle'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['src']

compileJava.options.encoding = 'UTF-8'

configurations { sqlg }

dependencies {
    compileOnly 'com.github.osobolev.sqlg2:sqlg2-preprocess:5.0'
    compile 'com.github.osobolev.sqlg2:sqlg2-local-server:5.0'
    runtime driverClasspath

    sqlg 'com.github.osobolev.sqlg2:sqlg2-preprocess:5.0'
    sqlg driverClasspath
}

task preprocess {
    doLast {
        ant.taskdef(name: 'sqlg', classname: 'sqlg2.Preprocess', classpath: configurations.sqlg.asPath)
        ant.sqlg(classpath: configurations.sqlg.asPath,
                 driverclass: jdbcDriver, dbclass: dbClass,
                 url: jdbcUrl, user: username, password: password,
                 implpack: 'wrapper', wrappack: 'wrapper',
                 srcroot: 'src', encoding: compileJava.options.encoding) {
            fileset(dir: 'src') {
                include(name: 'layers/dao/Layer1.java')
            }
        }
        ant.sqlg(classpath: configurations.sqlg.asPath,
                 driverclass: jdbcDriver, dbclass: dbClass,
                 url: jdbcUrl, user: username, password: password,
                 implpack: 'wrapper', wrappack: 'wrapper', srcroot: 'src') {
            fileset(dir: 'src') {
                include(name: 'layers/dao/Layer2.java')
            }
        }
    }
}
preprocess.onlyIf { doPreprocess }
compileJava.dependsOn(preprocess)

task run(type: JavaExec, dependsOn: classes) {
    main = 'layers.LayersTest'
    classpath = sourceSets.main.runtimeClasspath
    args([jdbcDriver, jdbcUrl, username, password, dbClass].collect {
        it == '' ? '""' : it
    })
}
